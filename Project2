class ValidType:
    def __init__(self, type):
        self.type = type

    def __set_name__(self, owner, name):
        self.name = name

    def __set__(self, instance,  value):
        if not isinstance(value, self.type):
            raise ValueError(f"{self.name} should be {self.type.__name__}")
        instance.__dict__[self.name] = value 

    def __get__(self, instance, owner):
        if instance in None:
            return self
        return instance.__dict__.get(self.name, None)
    
class Int(ValidType):
    def __init__(self):
        super().__init__(int)


class Float(ValidType):
    def __init__(self):
        super().__init__(float)


class List(ValidType):
    def __init__(self):
        super().__init__(list)

class Person:
    age = Int()
    height = Float()
    tags = List()
    fav_foods = List()
    name = str


obj = Person()
obj.age = 12.5
